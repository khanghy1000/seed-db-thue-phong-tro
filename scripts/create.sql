-- DELELE ALL USER TABLES

DECLARE @Sql NVARCHAR(500) DECLARE @Cursor CURSOR

SET @Cursor = CURSOR FAST_FORWARD FOR
    SELECT DISTINCT sql = 'ALTER TABLE [' + tc2.TABLE_SCHEMA + '].[' + tc2.TABLE_NAME + '] DROP [' +
                          rc1.CONSTRAINT_NAME + '];'
    FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS rc1
             LEFT JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS tc2 ON tc2.CONSTRAINT_NAME = rc1.CONSTRAINT_NAME

OPEN @Cursor FETCH NEXT FROM @Cursor INTO @Sql

WHILE (@@FETCH_STATUS = 0)
    BEGIN
        EXEC sp_executesql @Sql
        FETCH NEXT FROM @Cursor INTO @Sql
    END

CLOSE @Cursor DEALLOCATE @Cursor
GO

EXEC sp_MSforeachtable 'DROP TABLE ?'
GO

-------------------------


CREATE TABLE ROLE (
    MAROLE  INT           NOT NULL IDENTITY (1, 1) PRIMARY KEY,
    TENROLE NVARCHAR(100) NOT NULL,

    UNIQUE (TENROLE)
)

INSERT INTO ROLE (TENROLE)
VALUES ('CHUTRO'),
       ('NGUOITIMPHONG'),
       ('ADMIN')

CREATE TABLE TAIKHOAN (
    USERNAME NVARCHAR(100) NOT NULL PRIMARY KEY,
    PASSWORD NVARCHAR(255) NOT NULL,
    MAROLE   INT           NOT NULL,

    FOREIGN KEY (MAROLE) REFERENCES ROLE (MAROLE)
)

CREATE TABLE NGUOITIMPHONG (
    MANGUOITIMPHONG INT           NOT NULL IDENTITY (1,1) PRIMARY KEY,
    HODEM           NVARCHAR(255) NOT NULL,
    TEN             NVARCHAR(255) NOT NULL,
    SOCANCUOC       BIGINT        NOT NULL,
    GIOITINH        NVARCHAR(4)   NOT NULL,
    NGAYSINH        DATE          NOT NULL,
    EMAIL           NVARCHAR(255) NOT NULL,
    SODIENTHOAI     BIGINT        NOT NULL,
    USERNAME        NVARCHAR(100) NOT NULL,

    UNIQUE (SOCANCUOC),
    CHECK (GIOITINH = N'NAM' OR GIOITINH = N'NỮ' OR GIOITINH = N'KHÁC'),

    FOREIGN KEY (USERNAME) REFERENCES TAIKHOAN (USERNAME)
)

CREATE TABLE CHUTRO (
    MACHUTRO    INT           NOT NULL IDENTITY (1,1) PRIMARY KEY,
    HODEM       NVARCHAR(255) NOT NULL,
    TEN         NVARCHAR(255) NOT NULL,
    SOCANCUOC   BIGINT        NOT NULL,
    GIOITINH    NVARCHAR(4)   NOT NULL,
    NGAYSINH    DATE          NOT NULL,
    EMAIL       NVARCHAR(255) NOT NULL,
    SODIENTHOAI BIGINT        NOT NULL,
    USERNAME    NVARCHAR(100) NOT NULL,

    UNIQUE (SOCANCUOC),
    CHECK (GIOITINH = N'NAM' OR GIOITINH = N'NỮ' OR GIOITINH = N'KHÁC'),

    FOREIGN KEY (USERNAME) REFERENCES TAIKHOAN (USERNAME)
)

CREATE TABLE TINH (
    MATINH  INT           NOT NULL IDENTITY (1,1) PRIMARY KEY,
    TENTINH NVARCHAR(255) NOT NULL,

    UNIQUE (TENTINH)
)

CREATE TABLE QUANHUYEN (
    MAQUANHUYEN  INT           NOT NULL IDENTITY (1,1) PRIMARY KEY,
    TENQUANHUYEN NVARCHAR(255) NOT NULL,
    MATINH       INT           NOT NULL,

    UNIQUE (TENQUANHUYEN, MATINH),

    FOREIGN KEY (MATINH) REFERENCES TINH (MATINH)
)

CREATE TABLE PHUONGXA (
    MAPHUONGXA  INT           NOT NULL IDENTITY (1,1) PRIMARY KEY,
    TENPHUONGXA NVARCHAR(255) NOT NULL,
    MAQUANHUYEN INT           NOT NULL,

    UNIQUE (TENPHUONGXA, MAQUANHUYEN),

    FOREIGN KEY (MAQUANHUYEN) REFERENCES QUANHUYEN (MAQUANHUYEN)
)

CREATE TABLE PHONG (
    MAPHONG        INT           NOT NULL IDENTITY (1,1) PRIMARY KEY,
    TENPHONG       NVARCHAR(255) NOT NULL,
    SONHA          NVARCHAR(255) NOT NULL,
    MAPHUONGXA     INT           NOT NULL,
    SOLUONGNGUOI   INT           NOT NULL,
    DIENTICHPHONG  FLOAT         NOT NULL,
    GIATHUE        FLOAT         NOT NULL,
    TINHTRANGPHONG NVARCHAR(255) NOT NULL,
    MACHUTRO       INT           NOT NULL,
    TRANGTHAIAN    BIT DEFAULT 0 NOT NULL,
    MOTATHEM       NVARCHAR(MAX),

    CHECK (SOLUONGNGUOI > 0),
    CHECK (DIENTICHPHONG > 0),
    CHECK (GIATHUE > 0),

    FOREIGN KEY (MAPHUONGXA) REFERENCES PHUONGXA (MAPHUONGXA),
    FOREIGN KEY (MACHUTRO) REFERENCES CHUTRO (MACHUTRO),
)

CREATE TABLE LOAIDICHVU (
    MALOAIDICHVU  INT           NOT NULL IDENTITY (1,1) PRIMARY KEY,
    TENLOAIDICHVU NVARCHAR(255) NOT NULL,

    UNIQUE (TENLOAIDICHVU)
)

CREATE TABLE DICHVU_PHONG (
    MA_DICHVU_PHONG INT   NOT NULL IDENTITY (1,1) PRIMARY KEY,
    MALOAIDICHVU    INT   NOT NULL,
    MAPHONG         INT   NOT NULL,
    DONGIA          FLOAT NOT NULL,
    CHECK (DONGIA >= 0),
    UNIQUE (MALOAIDICHVU, MAPHONG),

    FOREIGN KEY (MALOAIDICHVU) REFERENCES LOAIDICHVU (MALOAIDICHVU),
    FOREIGN KEY (MAPHONG) REFERENCES PHONG (MAPHONG),
)

CREATE TABLE LOAITHIETBI (
    MALOAITHIETBI  INT           NOT NULL IDENTITY (1,1) PRIMARY KEY,
    TENLOAITHIETBI NVARCHAR(255) NOT NULL,

    UNIQUE (TENLOAITHIETBI)
)

CREATE TABLE THIETBI_PHONG (
    MA_THIETBI_PHONG INT           NOT NULL IDENTITY (1,1) PRIMARY KEY,
    MALOAITHIETBI    INT           NOT NULL,
    MAPHONG          INT           NOT NULL,
    SOLUONG          INT           NOT NULL,
    TINHTRANG        NVARCHAR(255) NOT NULL,

    CHECK (SOLUONG > 0),
    UNIQUE (MALOAITHIETBI, MAPHONG),

    FOREIGN KEY (MALOAITHIETBI) REFERENCES LOAITHIETBI (MALOAITHIETBI),
    FOREIGN KEY (MAPHONG) REFERENCES PHONG (MAPHONG),
)

CREATE TABLE YEUCAUXEMPHONG (
    MAYEUCAUXEMPHONG INT                        NOT NULL IDENTITY (1,1) PRIMARY KEY,
    MAPHONG          INT                        NOT NULL,
    MANGUOITIMPHONG  INT                        NOT NULL,
    NGAYGIOYEUCAU    DATETIME DEFAULT GETDATE() NOT NULL,
    NGAYGIOHEN       DATETIME                   NOT NULL,
    TRANGTHAI        NVARCHAR(10)               NOT NULL,
    LYDOTUCHOI       NVARCHAR(255),
    NGAYGIOTUCHOI    DATETIME,

    CHECK (NGAYGIOYEUCAU < NGAYGIOHEN),
    CHECK (TRANGTHAI = N'CHỜ DUYỆT' OR TRANGTHAI = N'ĐỒNG Ý' OR TRANGTHAI = N'TỪ CHỐI' OR TRANGTHAI = N'HUỶ'),
    UNIQUE (MAPHONG, MANGUOITIMPHONG, NGAYGIOYEUCAU),

    FOREIGN KEY (MAPHONG) REFERENCES PHONG (MAPHONG),
    FOREIGN KEY (MANGUOITIMPHONG) REFERENCES NGUOITIMPHONG (MANGUOITIMPHONG),
)

CREATE TABLE YEUCAUTHUEPHONG (
    MAYEUCAUTHUEPHONG INT                        NOT NULL IDENTITY (1,1) PRIMARY KEY,
    MAPHONG           INT                        NOT NULL,
    MANGUOITIMPHONG   INT                        NOT NULL,
    NGAYGIOYEUCAU     DATETIME DEFAULT GETDATE() NOT NULL,
    NGAYBATDAU        DATE                       NOT NULL,
    NGAYKETTHUC       DATE                       NOT NULL,
    TRANGTHAI         NVARCHAR(10)               NOT NULL,
    LYDOTUCHOI        NVARCHAR(255),
    NGAYGIOTUCHOI     DATETIME,

    CHECK (NGAYBATDAU < NGAYKETTHUC),
    CHECK (TRANGTHAI = N'CHỜ DUYỆT' OR TRANGTHAI = N'ĐỒNG Ý' OR TRANGTHAI = N'TỪ CHỐI' OR TRANGTHAI = N'HUỶ'),
    UNIQUE (MAPHONG, MANGUOITIMPHONG, NGAYGIOYEUCAU),

    FOREIGN KEY (MAPHONG) REFERENCES PHONG (MAPHONG),
    FOREIGN KEY (MANGUOITIMPHONG) REFERENCES NGUOITIMPHONG (MANGUOITIMPHONG),
)

CREATE TABLE THUEPHONG (
    MATHUEPHONG INT          NOT NULL IDENTITY (1,1) PRIMARY KEY,
    MANGUOITHUE INT          NOT NULL,
    MAPHONG     INT          NOT NULL,
    NGAYBATDAU  DATE         NOT NULL,
    NGAYKETTHUC DATE         NOT NULL,
    TRANGTHAI   NVARCHAR(12) NOT NULL,

    CHECK (NGAYBATDAU < NGAYKETTHUC),
    CHECK (TRANGTHAI = N'ĐANG THUÊ' OR TRANGTHAI = N'ĐÃ TRẢ PHÒNG'),
    UNIQUE (MANGUOITHUE, MAPHONG, NGAYBATDAU, NGAYKETTHUC),

    FOREIGN KEY (MANGUOITHUE) REFERENCES NGUOITIMPHONG (MANGUOITIMPHONG),
    FOREIGN KEY (MAPHONG) REFERENCES PHONG (MAPHONG),
)

CREATE TABLE HOADON (
    MAHOADON    INT                    NOT NULL IDENTITY (1,1) PRIMARY KEY,
    MATHUEPHONG INT                    NOT NULL,
    NGAYLAP     DATE DEFAULT GETDATE() NOT NULL,
    TIENPHONG   FLOAT                  NOT NULL,
    DATHANHTOAN BIT  DEFAULT 0         NOT NULL,

    FOREIGN KEY (MATHUEPHONG) REFERENCES THUEPHONG (MATHUEPHONG)
)

CREATE TABLE CT_HOADON (
    MAHOADON     INT                    NOT NULL,
    MALOAIDICHVU INT                    NOT NULL,
    SOLUONG      INT                    NOT NULL,
    DONGIA       FLOAT                  NOT NULL,

    CHECK (SOLUONG >= 0),
    CHECK (DONGIA >= 0),

    FOREIGN KEY (MALOAIDICHVU) REFERENCES LOAIDICHVU (MALOAIDICHVU),
    FOREIGN KEY (MAHOADON) REFERENCES HOADON (MAHOADON),

    PRIMARY KEY (MALOAIDICHVU, MAHOADON)
)
